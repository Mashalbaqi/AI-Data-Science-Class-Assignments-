import pandas as pd
import numpy as np
import matplotlib.pylab as plt
import seaborn as sns
plt.style.use('ggplot')

df=pd.read_csv(r'C:\Users\ACC\Desktop\training\assignment\gym_members_exercise_tracking.csv')

#Mean Median Standard Devition IQR
data = df["Calories_Burned"]
mean = data.mean()
median = data.median()
std_dev = data.std()
iqr = data.quantile(0.75) - data.quantile(0.25)

print(f"Mean: {mean}")
print(f"Median: {median}")
print(f"Standard Deviation: {std_dev}")
print(f"IQR: {iqr}")

df.shape
df.columns
df.dtypes

#Univeriant Analysis

#Bar Chart
df['Fat_Percentage'].value_counts()\
.head(50)\
.plot(kind='bar')

#Histogram
plt.figure(figsize=(8, 5))
plt.hist(data, bins=30, color='DarkBlue', edgecolor='Black')
plt.title("Histogram of Data")
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.show()

#box Plot
plt.figure(figsize=(8, 5))
plt.boxplot(data, vert=False)
plt.title("Box Plot of Data")
plt.xlabel("Value")
plt.show()

# Density Plot
plt.figure(figsize=(8, 5))
sns.kdeplot(data, color='purple', shade=True)
plt.title("Density Plot of Data")
plt.xlabel("Value")
plt.show()

# Cumulative Distribution Function (CDF)
sorted_data = np.sort(data)
cdf = np.arange(len(sorted_data)) / float(len(sorted_data))
plt.figure(figsize=(8, 5))
plt.plot(sorted_data, cdf, color='Darkorange')
plt.title("Cumulative Distribution Function (CDF)")
plt.xlabel("Value")
plt.ylabel("CDF")
plt.show()

#Bivariant Analysis
x = df["Calories_Burned"]  
y = df["Fat_Percentage"] 

#scatter in seaborn
plt.figure(figsize=(8, 5))
sns.scatterplot(x=x, y=y, data=df, color="darkred", edgecolor="blue")
plt.title("Scatter Plot of X vs Y")
plt.xlabel("X")
plt.ylabel("Y")
plt.show()

# Line Plot
plt.figure(figsize=(8, 5))
sns.lineplot(x=x, y=y, data=df, color="purple")
plt.title("Line Plot of X vs Y")
plt.xlabel("X")
plt.ylabel("Y")
plt.show()


# Joint Plot
sns.jointplot(x=x, y=y, data=df, kind="scatter", color="blue", marginal_kws=dict(bins=30, fill=True))
plt.suptitle("Joint Plot of X and Y", y=1.02)
plt.show()

# Hexbin Plot
plt.figure(figsize=(8, 5))
sns.jointplot(x=x, y=y, data=df, kind="hex", color="darkred")
plt.suptitle("Hexbin Plot of X vs Y", y=1.02)
plt.show()


#  Regression Plot
plt.figure(figsize=(8, 5))
sns.regplot(x=x, y=y, data=df, color="teal")
plt.title("Regression Plot of X vs Y")
plt.xlabel("X")
plt.ylabel("Y")
plt.show()

Multivariate

df=pd.read_csv(r'C:\Users\ACC\Desktop\training\assignment\gym_members_exercise_tracking.csv')

# Pair Plot of Multiple Variables
sns.pairplot(df, hue="Calories_Burned") 
plt.suptitle("Pair Plot of Multiple Variables", y=1)
plt.show()

# Scatter Plot with Hue and Size Encoding
plt.figure(figsize=(10, 6))
sns.scatterplot(x="Weight (kg)", y="Fat_Percentage", data=df, hue="Calories_Burned", size="Age", palette="viridis", sizes=(20, 200))
plt.title("Scatter Plot with Hue and Size Encoding")
plt.xlabel("X")
plt.ylabel("Y")
plt.show()

# Correlation Heatmap

df_corr = df[['Age','Weight (kg)','Height (m)','Session_Duration (hours)','Calories_Burned','Fat_Percentage','Workout_Frequency (days/week)','BMI']].dropna().corr()
df_corr

plt.figure(figsize=(8, 6))
sns.heatmap(df_corr, annot=True, cmap="coolwarm", center=0)
plt.title("Correlation Heatmap")
plt.show()




